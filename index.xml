<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alberto Giust</title><link>https://alright21.github.io/</link><description>Recent content on Alberto Giust</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 02 Dec 2023 14:57:05 +0100</lastBuildDate><atom:link href="https://alright21.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Coderdojo Turtle Race</title><link>https://alright21.github.io/education/coderdojo_turtle_race/</link><pubDate>Mon, 06 Nov 2023 19:04:28 +0100</pubDate><guid>https://alright21.github.io/education/coderdojo_turtle_race/</guid><description>Coderdojo Turtle Race Hello everyone! Today I will show you what I am planning to do in future Coderdojo sessions with young ninjas who would like to learn Python.
In the Raspberry Pi projects page, there are some interesting learning paths and tutorials that we can use to teach Scratch, Python, Pi Pico and more. I found out this interesting project with Python called Turtle Race.
It is a fun project because kids learn about some advanced turtle and Python features, while creating a simple game.</description></item><item><title>FE CTF 2023</title><link>https://alright21.github.io/ctf/fe_ctf_2023/</link><pubDate>Mon, 30 Oct 2023 08:58:25 +0200</pubDate><guid>https://alright21.github.io/ctf/fe_ctf_2023/</guid><description>FE CTF 2023 Write-ups for FE CTF 2023. This weekend I was quite busy, but I managed to solve some easy challenges in this CTF.
Challenges Login - Level 1 Login - Level 2 Login - Level 4 CRACKME.EXE - Level 1 Challenges Login - Level 1 Category Points Solves Web 26 357 Challenge Description So you fancy yourself a hacker? Me? I don&amp;rsquo;t even see the code!
Log in, get flag</description></item><item><title>Reversing and Hooking Native Libraries in Android with Frida</title><link>https://alright21.github.io/blog/mobile_security_native/</link><pubDate>Thu, 26 Oct 2023 18:01:16 +0200</pubDate><guid>https://alright21.github.io/blog/mobile_security_native/</guid><description>Reversing and Hooking Native Libraries in Android with Frida Android applications are written in Java (Kotlin): we can use tools like jadx to decompile Java smali code to analyze the code, identify interesting methods and find possible secrets.
In some cases, Android applications use native libraries to perform some specific tasks: they may be used for root detection, or they can also be responsible for encryption, or simply to run simple tasks, like hide secrets.</description></item><item><title>TCP1P CTF 2023</title><link>https://alright21.github.io/ctf/tcp1pctf/</link><pubDate>Tue, 17 Oct 2023 08:53:58 +0200</pubDate><guid>https://alright21.github.io/ctf/tcp1pctf/</guid><description>TCP1P CTF 2023 Write-ups for TCP1P CTF 2023.
Challenges Intention Challenges Intention Category Points Solves Mobile 356 13 Challenge Description Approach The challenge presents an interesting setup compared to regular mobile challenges: we are asked to create a malicious app that exploits it inside an emulator, great idea!
The application has two activities: MainActivity, where nothing happens, and a FlagSender, where the content of flag.txt file is set as an intent result and sent back to the caller.</description></item><item><title>About me</title><link>https://alright21.github.io/about/</link><pubDate>Fri, 08 Sep 2023 15:39:23 +0200</pubDate><guid>https://alright21.github.io/about/</guid><description>Hi there üëã I am Alberto, Penetration Tester and Security Enthusiast
üòÑ Pronouns: He/Him üìç Milan, Italy üî≠ I‚Äôm currently working on Web and Mobile application security testing for Spike Reply. I hunt for security bugs and report them to clients üå± I‚Äôm currently learning Web and Mobile Security (constantly evolving), digital forensics (beginner, studying for eCDFP) üìú eWPT (eLearn Security Web Penetration Tester) üì´ How to reach me: alberto.giust21[at]gmail.com @alright2121 (Telegram) Interests Mobile Security üì±: I am trying to improve my skills in this area, ranging from static analysis and reversing, to dynamic analysis (Frida is becoming a great friend of mineüòÑ) Education in programming and Cybersecurity üßÆ: I am currently volunteering in Coderdojo Milano.</description></item><item><title>Intercepting Non-HTTP Traffic in Android</title><link>https://alright21.github.io/blog/mobile_nohttp/</link><pubDate>Wed, 06 Sep 2023 12:25:03 +0200</pubDate><guid>https://alright21.github.io/blog/mobile_nohttp/</guid><description>Intercepting Non-HTTP Traffic in Android Recently I have started solving a mobile security CTF called hpAndro and I stumbled upon two challenges focusing on intercepting non-HTTP traffic in Android. I tried to check if I could do it by setting up Wireshark on my laptop and detect this communication directly from that, but it was not working.
I thought I could change my perspective and monitor traffic directly from my device (it is always Linux).</description></item><item><title>Intercepting Traffic in Mobile Flutter Applications</title><link>https://alright21.github.io/blog/mobile_flutter/</link><pubDate>Tue, 01 Aug 2023 08:50:38 +0200</pubDate><guid>https://alright21.github.io/blog/mobile_flutter/</guid><description>Intercepting Traffic in Mobile Flutter Applications During our tests, it may happen that we have to find vulnerabilities in applications built with the Flutter framework. It is pretty common when we have both Android and iOS apps. This framework raises some problems when we need to intercept traffic for two reasons:
flutter apps are proxy unaware - if we add a proxy listener from the settings of our phone, the application will ignore it flutter apps often implement ssl pinning techniques that are not easily bypassed using standard frida scripts Below are explained the solutions for Android and iOS.</description></item><item><title>Mobile Security Introduction</title><link>https://alright21.github.io/blog/mobile_security_intro/</link><pubDate>Sun, 23 Jul 2023 18:00:00 +0200</pubDate><guid>https://alright21.github.io/blog/mobile_security_intro/</guid><description>Mobile Security Introduction After quite a while, I finally decided to upload this article. If you come across any inconsistencies, I am always open to feedback. I will continuously update it, aiming to create a comprehensive &amp;ldquo;Mobile Security Introduction Garden&amp;rdquo;. Have fun reading! :)
The world of mobile application security requires to have different skills and knowledge compared to web application testing because we are also dealing with a client installed on our device that handles user input, and often communicates with a backend server.</description></item><item><title>SrdnlenCTF</title><link>https://alright21.github.io/ctf/srdnlenctf/</link><pubDate>Wed, 12 Oct 2022 23:08:58 +0200</pubDate><guid>https://alright21.github.io/ctf/srdnlenctf/</guid><description>SrdnlenCTF Writeups for srdnlenCTF
Categories Web
I love pickles Challenges I love pickles Category Points Solves Web 50 51 Challenge Description: My Sardinian friend says she hates &amp;ldquo;su cugumere cunfettau&amp;rdquo;, but I love them, on top of my burger and in my code.
If you really know your pickles you can enter in my admin area.
Website:¬†http://ilovepickles.challs.srdnlen.it
Approach As the name of the challenge suggests, the application should use the pickle library to encode and decode the cookies (I found out about this library while I was playing the sekaiCTF, but I didn&amp;rsquo;t solve the challenge there).</description></item></channel></rss>